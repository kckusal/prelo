// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgres"
    url      = env("DATABASE_URL")
}

enum DocumentType {
    BOOK
}

enum ReadingStatus {
    READING_PLANNED
    READING_IN_PROGRESS
    READING_COMPLETED
}

model Tag {
    id        Int               @id @default(autoincrement())
    name      String
    documents TagsOnDocuments[]

    @@index([name])
}

model User {
    id           Int        @id @default(autoincrement())
    firstName    String
    lastName     String
    email        String     @unique
    passwordHash String
    createdAt    DateTime   @default(now())
    updatedAt    DateTime   @updatedAt
    documents    Document[] @relation(name: "createdBy")
    schedules    Schedule[] @relation(name: "schedule")

    @@index([email])
}

model Document {
    id            Int               @id @default(autoincrement())
    type          DocumentType
    title         String            @db.VarChar(200)
    description   String
    numOfPages    Int
    author        String
    publishedDate DateTime
    tags          TagsOnDocuments[]
    schedules     Schedule[]        @relation(name: "associatedDocument")

    createdAt       DateTime @default(now())
    createdBy       User     @relation(name: "createdBy", fields: [createdByUserId], references: [id])
    createdByUserId Int

    @@index([type, author])
}

model TagsOnDocuments {
    documentId Int
    Document   Document @relation(fields: [documentId], references: [id])

    tagId Int
    tag   Tag @relation(fields: [tagId], references: [id])

    @@id([documentId, tagId])
}

model Schedule {
    id             Int           @id @default(autoincrement())
    document       Document      @relation(name: "associatedDocument", fields: [documentId], references: [id])
    documentId     Int
    user           User          @relation(name: "schedule", fields: [userId], references: [id])
    userId         Int
    numOfPagesRead Int
    status         ReadingStatus
    createdAt      DateTime      @default(now())
    updatedAt      DateTime      @updatedAt

    @@index([status])
}
